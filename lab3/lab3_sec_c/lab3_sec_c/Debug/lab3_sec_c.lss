
lab3_sec_c.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000410  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000039c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800100  00800100  00000410  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000410  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000440  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  00000480  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000007c7  00000000  00000000  000004c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000068d  00000000  00000000  00000c8f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000056a  00000000  00000000  0000131c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000009c  00000000  00000000  00001888  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003ad  00000000  00000000  00001924  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000164  00000000  00000000  00001cd1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00001e35  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 48 00 	jmp	0x90	; 0x90 <__vector_2>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 61 00 	jmp	0xc2	; 0xc2 <__vector_11>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a4 30       	cpi	r26, 0x04	; 4
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 8b 00 	call	0x116	; 0x116 <main>
  88:	0c 94 cc 01 	jmp	0x398	; 0x398 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <__vector_2>:
		};
	delay_flag=0;
}
void delay_5_sec(){
	for(int i=0;i<5;i++){
		delay_1_sec();
  90:	1f 92       	push	r1
  92:	0f 92       	push	r0
  94:	0f b6       	in	r0, 0x3f	; 63
  96:	0f 92       	push	r0
  98:	11 24       	eor	r1, r1
  9a:	8f 93       	push	r24
  9c:	9f 93       	push	r25
  9e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
  a2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  a6:	01 96       	adiw	r24, 0x01	; 1
  a8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
  ac:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
  b0:	15 b8       	out	0x05, r1	; 5
  b2:	18 b8       	out	0x08, r1	; 8
  b4:	9f 91       	pop	r25
  b6:	8f 91       	pop	r24
  b8:	0f 90       	pop	r0
  ba:	0f be       	out	0x3f, r0	; 63
  bc:	0f 90       	pop	r0
  be:	1f 90       	pop	r1
  c0:	18 95       	reti

000000c2 <__vector_11>:
  c2:	1f 92       	push	r1
  c4:	0f 92       	push	r0
  c6:	0f b6       	in	r0, 0x3f	; 63
  c8:	0f 92       	push	r0
  ca:	11 24       	eor	r1, r1
  cc:	8f 93       	push	r24
  ce:	9f 93       	push	r25
  d0:	81 e0       	ldi	r24, 0x01	; 1
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <delay_flag+0x1>
  d8:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <delay_flag>
  dc:	9f 91       	pop	r25
  de:	8f 91       	pop	r24
  e0:	0f 90       	pop	r0
  e2:	0f be       	out	0x3f, r0	; 63
  e4:	0f 90       	pop	r0
  e6:	1f 90       	pop	r1
  e8:	18 95       	reti

000000ea <delay_0_2_sec>:
	}
}
void delay_0_2_sec(){
	OCR1A = 3124;//16M*1/1024-1
  ea:	84 e3       	ldi	r24, 0x34	; 52
  ec:	9c e0       	ldi	r25, 0x0C	; 12
  ee:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
  f2:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	TCCR1A = 0x00;//CTC MODE
  f6:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
	TCCR1B = 0x0D;
  fa:	8d e0       	ldi	r24, 0x0D	; 13
  fc:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	while(delay_flag==0);
 100:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <delay_flag>
 104:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <delay_flag+0x1>
 108:	89 2b       	or	r24, r25
 10a:	d1 f3       	breq	.-12     	; 0x100 <delay_0_2_sec+0x16>
	delay_flag=0;
 10c:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <delay_flag+0x1>
 110:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <delay_flag>
 114:	08 95       	ret

00000116 <main>:
void delay_0_2_sec();
void delay_1_sec();
void delay_5_sec();
int main()
{
	DDRB=0xFF;
 116:	8f ef       	ldi	r24, 0xFF	; 255
 118:	84 b9       	out	0x04, r24	; 4
	DDRC=0xFF;
 11a:	87 b9       	out	0x07, r24	; 7
	TIMSK1=(1<<OCIE1A);
 11c:	82 e0       	ldi	r24, 0x02	; 2
 11e:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
	EICRA=0x0C;
 122:	9c e0       	ldi	r25, 0x0C	; 12
 124:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <__TEXT_REGION_LENGTH__+0x7f8069>
	EIMSK = (1<<INT1);
 128:	8d bb       	out	0x1d, r24	; 29
	sei ();
 12a:	78 94       	sei
			PORTC=0x00;
			stop_flag=0;
			continue;
		}
		else{
		PORTB=0x11;//STATE1
 12c:	0f 2e       	mov	r0, r31
 12e:	f1 e1       	ldi	r31, 0x11	; 17
 130:	7f 2e       	mov	r7, r31
 132:	f0 2d       	mov	r31, r0
		PORTC|=(1<<4);
		for(int i=1;i<=5;i++){
		OCR1A = 15624;//16M*1/1024-1
 134:	0f 2e       	mov	r0, r31
 136:	f8 e8       	ldi	r31, 0x88	; 136
 138:	ef 2e       	mov	r14, r31
 13a:	f1 2c       	mov	r15, r1
 13c:	f0 2d       	mov	r31, r0
 13e:	0f 2e       	mov	r0, r31
 140:	f8 e0       	ldi	r31, 0x08	; 8
 142:	af 2e       	mov	r10, r31
 144:	fd e3       	ldi	r31, 0x3D	; 61
 146:	bf 2e       	mov	r11, r31
 148:	f0 2d       	mov	r31, r0
 14a:	65 01       	movw	r12, r10
		TCCR1A = 0x00;//CTC MODE
 14c:	00 e8       	ldi	r16, 0x80	; 128
 14e:	10 e0       	ldi	r17, 0x00	; 0
		TCCR1B = 0x0D;
 150:	c1 e8       	ldi	r28, 0x81	; 129
 152:	d0 e0       	ldi	r29, 0x00	; 0
 154:	0f 2e       	mov	r0, r31
 156:	fd e0       	ldi	r31, 0x0D	; 13
 158:	8f 2e       	mov	r8, r31
 15a:	f0 2d       	mov	r31, r0
 15c:	98 2c       	mov	r9, r8
			stop_flag=0;
			continue;
		}
		else{
		PORTC&=~(1<<4);
		PORTB=0x21;
 15e:	0f 2e       	mov	r0, r31
 160:	f1 e2       	ldi	r31, 0x21	; 33
 162:	6f 2e       	mov	r6, r31
 164:	f0 2d       	mov	r31, r0
			stop_flag=0;
			continue;
		}
		else{
		PORTC&=~(1<<4);
		PORTB=0x09;
 166:	0f 2e       	mov	r0, r31
 168:	f9 e0       	ldi	r31, 0x09	; 9
 16a:	5f 2e       	mov	r5, r31
 16c:	f0 2d       	mov	r31, r0
	EICRA=0x0C;
	EIMSK = (1<<INT1);
	sei ();
	while(1){
		
		while(stop_flag%2==0);
 16e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 172:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 176:	80 ff       	sbrs	r24, 0
 178:	fa cf       	rjmp	.-12     	; 0x16e <main+0x58>
		
		
		if(stop_flag%2==0){
 17a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 17e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 182:	80 fd       	sbrc	r24, 0
 184:	07 c0       	rjmp	.+14     	; 0x194 <main+0x7e>
			PORTB=0x00;//STATE1
 186:	15 b8       	out	0x05, r1	; 5
			PORTC=0x00;
 188:	18 b8       	out	0x08, r1	; 8
			stop_flag=0;
 18a:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 18e:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
			continue;
 192:	ed cf       	rjmp	.-38     	; 0x16e <main+0x58>
		}
		else{
		PORTB=0x11;//STATE1
 194:	75 b8       	out	0x05, r7	; 5
		PORTC|=(1<<4);
 196:	44 9a       	sbi	0x08, 4	; 8
 198:	25 e0       	ldi	r18, 0x05	; 5
 19a:	30 e0       	ldi	r19, 0x00	; 0
		for(int i=1;i<=5;i++){
		OCR1A = 15624;//16M*1/1024-1
 19c:	f7 01       	movw	r30, r14
 19e:	d1 82       	std	Z+1, r13	; 0x01
 1a0:	c0 82       	st	Z, r12
		TCCR1A = 0x00;//CTC MODE
 1a2:	f8 01       	movw	r30, r16
 1a4:	10 82       	st	Z, r1
		TCCR1B = 0x0D;
 1a6:	98 82       	st	Y, r9
		while(delay_flag==0){
 1a8:	06 c0       	rjmp	.+12     	; 0x1b6 <main+0xa0>
			if(stop_flag%2==0)break;
 1aa:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1ae:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1b2:	80 ff       	sbrs	r24, 0
 1b4:	06 c0       	rjmp	.+12     	; 0x1c2 <main+0xac>
		PORTC|=(1<<4);
		for(int i=1;i<=5;i++){
		OCR1A = 15624;//16M*1/1024-1
		TCCR1A = 0x00;//CTC MODE
		TCCR1B = 0x0D;
		while(delay_flag==0){
 1b6:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <delay_flag>
 1ba:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <delay_flag+0x1>
 1be:	89 2b       	or	r24, r25
 1c0:	a1 f3       	breq	.-24     	; 0x1aa <main+0x94>
			if(stop_flag%2==0)break;
		}
		delay_flag=0;
 1c2:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <delay_flag+0x1>
 1c6:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <delay_flag>
 1ca:	21 50       	subi	r18, 0x01	; 1
 1cc:	31 09       	sbc	r19, r1
			continue;
		}
		else{
		PORTB=0x11;//STATE1
		PORTC|=(1<<4);
		for(int i=1;i<=5;i++){
 1ce:	31 f7       	brne	.-52     	; 0x19c <main+0x86>
		}
		
		}
		
		
		if(stop_flag%2==0){
 1d0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 1d4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1d8:	80 fd       	sbrc	r24, 0
 1da:	07 c0       	rjmp	.+14     	; 0x1ea <main+0xd4>
			PORTB=0x00;
 1dc:	15 b8       	out	0x05, r1	; 5
			PORTC=0x00;
 1de:	18 b8       	out	0x08, r1	; 8
			stop_flag=0;
 1e0:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1e4:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
			continue;
 1e8:	c2 cf       	rjmp	.-124    	; 0x16e <main+0x58>
		}
		else{
		PORTC&=~(1<<4);
 1ea:	44 98       	cbi	0x08, 4	; 8
		PORTB=0x21;
 1ec:	65 b8       	out	0x05, r6	; 5
		PORTC|=(1<<4);//STATE2	
 1ee:	44 9a       	sbi	0x08, 4	; 8
		
		
					OCR1A = 15624;//16M*1/1024-1
 1f0:	f7 01       	movw	r30, r14
 1f2:	b1 82       	std	Z+1, r11	; 0x01
 1f4:	a0 82       	st	Z, r10
					TCCR1A = 0x00;//CTC MODE
 1f6:	f8 01       	movw	r30, r16
 1f8:	10 82       	st	Z, r1
					TCCR1B = 0x0D;
 1fa:	88 82       	st	Y, r8
					while(delay_flag==0){
 1fc:	06 c0       	rjmp	.+12     	; 0x20a <main+0xf4>
						if(stop_flag%2==0)break;
 1fe:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 202:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 206:	80 ff       	sbrs	r24, 0
 208:	06 c0       	rjmp	.+12     	; 0x216 <main+0x100>
		
		
					OCR1A = 15624;//16M*1/1024-1
					TCCR1A = 0x00;//CTC MODE
					TCCR1B = 0x0D;
					while(delay_flag==0){
 20a:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <delay_flag>
 20e:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <delay_flag+0x1>
 212:	89 2b       	or	r24, r25
 214:	a1 f3       	breq	.-24     	; 0x1fe <main+0xe8>
						if(stop_flag%2==0)break;
					};
					delay_flag=0;	
 216:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <delay_flag+0x1>
 21a:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <delay_flag>
		}
		
		
		
		if(stop_flag%2==0){
 21e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 222:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 226:	80 fd       	sbrc	r24, 0
 228:	07 c0       	rjmp	.+14     	; 0x238 <main+0x122>
			PORTB=0x00;
 22a:	15 b8       	out	0x05, r1	; 5
			PORTC=0x00;
 22c:	18 b8       	out	0x08, r1	; 8
			stop_flag=0;
 22e:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 232:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__DATA_REGION_ORIGIN__>
			continue;
 236:	9b cf       	rjmp	.-202    	; 0x16e <main+0x58>
		}
		else{
		PORTC&=~(1<<4);
 238:	44 98       	cbi	0x08, 4	; 8
		PORTB=0x09;
 23a:	55 b8       	out	0x05, r5	; 5
		PORTC|=(1<<4);//STATE3	
 23c:	44 9a       	sbi	0x08, 4	; 8
		
							OCR1A = 15624;//16M*1/1024-1
 23e:	f7 01       	movw	r30, r14
 240:	b1 82       	std	Z+1, r11	; 0x01
 242:	a0 82       	st	Z, r10
							TCCR1A = 0x00;//CTC MODE
 244:	f8 01       	movw	r30, r16
 246:	10 82       	st	Z, r1
							TCCR1B = 0x0D;
 248:	88 82       	st	Y, r8
							while(delay_flag==0){
 24a:	06 c0       	rjmp	.+12     	; 0x258 <main+0x142>
								if(stop_flag%2==0)break;
 24c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 250:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 254:	80 ff       	sbrs	r24, 0
 256:	06 c0       	rjmp	.+12     	; 0x264 <main+0x14e>
		PORTC|=(1<<4);//STATE3	
		
							OCR1A = 15624;//16M*1/1024-1
							TCCR1A = 0x00;//CTC MODE
							TCCR1B = 0x0D;
							while(delay_flag==0){
 258:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <delay_flag>
 25c:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <delay_flag+0x1>
 260:	89 2b       	or	r24, r25
 262:	a1 f3       	breq	.-24     	; 0x24c <main+0x136>
								if(stop_flag%2==0)break;
							};
							delay_flag=0;	
 264:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <delay_flag+0x1>
 268:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <delay_flag>
		}
		
		if(stop_flag%2==0){
 26c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 270:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 274:	80 fd       	sbrc	r24, 0
 276:	03 c0       	rjmp	.+6      	; 0x27e <main+0x168>
			PORTB=0x00;
 278:	15 b8       	out	0x05, r1	; 5
			PORTC=0x00;
 27a:	18 b8       	out	0x08, r1	; 8
			continue;
 27c:	78 cf       	rjmp	.-272    	; 0x16e <main+0x58>
		}
		else{
			PORTC&=~(1<<4);
 27e:	44 98       	cbi	0x08, 4	; 8
			PORTB=0x0D;
 280:	85 b8       	out	0x05, r8	; 5
			PORTC|=(1<<4);//STATE4
 282:	44 9a       	sbi	0x08, 4	; 8
			
								OCR1A = 15624;//16M*1/1024-1
 284:	f7 01       	movw	r30, r14
 286:	b1 82       	std	Z+1, r11	; 0x01
 288:	a0 82       	st	Z, r10
								TCCR1A = 0x00;//CTC MODE
 28a:	f8 01       	movw	r30, r16
 28c:	10 82       	st	Z, r1
								TCCR1B = 0x0D;
 28e:	88 82       	st	Y, r8
								while(delay_flag==0){
 290:	06 c0       	rjmp	.+12     	; 0x29e <main+0x188>
									if(stop_flag%2==0)break;
 292:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 296:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 29a:	80 ff       	sbrs	r24, 0
 29c:	06 c0       	rjmp	.+12     	; 0x2aa <main+0x194>
			PORTC|=(1<<4);//STATE4
			
								OCR1A = 15624;//16M*1/1024-1
								TCCR1A = 0x00;//CTC MODE
								TCCR1B = 0x0D;
								while(delay_flag==0){
 29e:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <delay_flag>
 2a2:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <delay_flag+0x1>
 2a6:	89 2b       	or	r24, r25
 2a8:	a1 f3       	breq	.-24     	; 0x292 <main+0x17c>
									if(stop_flag%2==0)break;
								};
								delay_flag=0;
 2aa:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <delay_flag+0x1>
 2ae:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <delay_flag>
		}	
		
		if(stop_flag%2==0){
 2b2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 2b6:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 2ba:	80 fd       	sbrc	r24, 0
 2bc:	03 c0       	rjmp	.+6      	; 0x2c4 <main+0x1ae>
			PORTB=0x00;
 2be:	15 b8       	out	0x05, r1	; 5
			PORTC=0x00;
 2c0:	18 b8       	out	0x08, r1	; 8
			continue;
 2c2:	55 cf       	rjmp	.-342    	; 0x16e <main+0x58>
		}
		else{
		PORTC&=~(1<<4);
 2c4:	44 98       	cbi	0x08, 4	; 8
		PORTB=0x0A;
 2c6:	8a e0       	ldi	r24, 0x0A	; 10
 2c8:	85 b9       	out	0x05, r24	; 5
		PORTC|=(1<<5);//STATE5
 2ca:	45 9a       	sbi	0x08, 5	; 8
 2cc:	25 e0       	ldi	r18, 0x05	; 5
 2ce:	30 e0       	ldi	r19, 0x00	; 0
		
		for(int i=1;i<=5;i++){				
				OCR1A = 15624;//16M*1/1024-1
 2d0:	f7 01       	movw	r30, r14
 2d2:	d1 82       	std	Z+1, r13	; 0x01
 2d4:	c0 82       	st	Z, r12
				TCCR1A = 0x00;//CTC MODE
 2d6:	f8 01       	movw	r30, r16
 2d8:	10 82       	st	Z, r1
				TCCR1B = 0x0D;
 2da:	98 82       	st	Y, r9
				while(delay_flag==0){
 2dc:	06 c0       	rjmp	.+12     	; 0x2ea <main+0x1d4>
					if(stop_flag%2==0)break;
 2de:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 2e2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 2e6:	80 ff       	sbrs	r24, 0
 2e8:	06 c0       	rjmp	.+12     	; 0x2f6 <main+0x1e0>
		
		for(int i=1;i<=5;i++){				
				OCR1A = 15624;//16M*1/1024-1
				TCCR1A = 0x00;//CTC MODE
				TCCR1B = 0x0D;
				while(delay_flag==0){
 2ea:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <delay_flag>
 2ee:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <delay_flag+0x1>
 2f2:	89 2b       	or	r24, r25
 2f4:	a1 f3       	breq	.-24     	; 0x2de <main+0x1c8>
					if(stop_flag%2==0)break;
				};
				delay_flag=0;	
 2f6:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <delay_flag+0x1>
 2fa:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <delay_flag>
 2fe:	21 50       	subi	r18, 0x01	; 1
 300:	31 09       	sbc	r19, r1
		else{
		PORTC&=~(1<<4);
		PORTB=0x0A;
		PORTC|=(1<<5);//STATE5
		
		for(int i=1;i<=5;i++){				
 302:	31 f7       	brne	.-52     	; 0x2d0 <main+0x1ba>
				delay_flag=0;	
			}

		}		
		
		if(stop_flag%2==0){
 304:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 308:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 30c:	80 fd       	sbrc	r24, 0
 30e:	03 c0       	rjmp	.+6      	; 0x316 <main+0x200>
			PORTB=0x00;
 310:	15 b8       	out	0x05, r1	; 5
			PORTC=0x00;
 312:	18 b8       	out	0x08, r1	; 8
			continue;
 314:	2c cf       	rjmp	.-424    	; 0x16e <main+0x58>
		}
		else{
			PORTB=0x0C;
 316:	8c e0       	ldi	r24, 0x0C	; 12
 318:	85 b9       	out	0x05, r24	; 5
			PORTC|=(1<<5);//STATE6
 31a:	45 9a       	sbi	0x08, 5	; 8
			delay_0_2_sec();
 31c:	0e 94 75 00 	call	0xea	; 0xea <delay_0_2_sec>
			PORTC^=(1<<5);
 320:	88 b1       	in	r24, 0x08	; 8
 322:	68 94       	set
 324:	44 24       	eor	r4, r4
 326:	45 f8       	bld	r4, 5
 328:	84 25       	eor	r24, r4
 32a:	88 b9       	out	0x08, r24	; 8
			delay_0_2_sec();
 32c:	0e 94 75 00 	call	0xea	; 0xea <delay_0_2_sec>
			PORTC^=(1<<5);
 330:	88 b1       	in	r24, 0x08	; 8
 332:	84 25       	eor	r24, r4
 334:	88 b9       	out	0x08, r24	; 8
			delay_0_2_sec();//0.2sec
 336:	0e 94 75 00 	call	0xea	; 0xea <delay_0_2_sec>
			PORTC^=(1<<5);
 33a:	88 b1       	in	r24, 0x08	; 8
 33c:	48 26       	eor	r4, r24
 33e:	48 b8       	out	0x08, r4	; 8
			delay_0_2_sec();//0.2sec
 340:	0e 94 75 00 	call	0xea	; 0xea <delay_0_2_sec>
			PORTB=0x09;
 344:	55 b8       	out	0x05, r5	; 5
			PORTC&=~(1<<5);
 346:	45 98       	cbi	0x08, 5	; 8
			PORTC|=(1<<4);//STATE7
 348:	44 9a       	sbi	0x08, 4	; 8
			delay_0_2_sec();
 34a:	0e 94 75 00 	call	0xea	; 0xea <delay_0_2_sec>
		}		
		
		if(stop_flag%2==0){
 34e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 352:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 356:	80 fd       	sbrc	r24, 0
 358:	03 c0       	rjmp	.+6      	; 0x360 <main+0x24a>
			PORTB=0x00;
 35a:	15 b8       	out	0x05, r1	; 5
			PORTC=0x00;
 35c:	18 b8       	out	0x08, r1	; 8
			continue;
 35e:	07 cf       	rjmp	.-498    	; 0x16e <main+0x58>
		}
		else{
		PORTC&=~(1<<4);
 360:	44 98       	cbi	0x08, 4	; 8
		PORTB=0x29;
 362:	89 e2       	ldi	r24, 0x29	; 41
 364:	85 b9       	out	0x05, r24	; 5
		PORTC|=(1<<4);//STATE8
 366:	44 9a       	sbi	0x08, 4	; 8
		
							OCR1A = 15624;//16M*1/1024-1
 368:	f7 01       	movw	r30, r14
 36a:	b1 82       	std	Z+1, r11	; 0x01
 36c:	a0 82       	st	Z, r10
							TCCR1A = 0x00;//CTC MODE
 36e:	f8 01       	movw	r30, r16
 370:	10 82       	st	Z, r1
							TCCR1B = 0x0D;
 372:	88 82       	st	Y, r8
							while(delay_flag==0){
 374:	06 c0       	rjmp	.+12     	; 0x382 <main+0x26c>
								if(stop_flag%2==0)break;
 376:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 37a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 37e:	80 ff       	sbrs	r24, 0
 380:	06 c0       	rjmp	.+12     	; 0x38e <main+0x278>
		PORTC|=(1<<4);//STATE8
		
							OCR1A = 15624;//16M*1/1024-1
							TCCR1A = 0x00;//CTC MODE
							TCCR1B = 0x0D;
							while(delay_flag==0){
 382:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <delay_flag>
 386:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <delay_flag+0x1>
 38a:	89 2b       	or	r24, r25
 38c:	a1 f3       	breq	.-24     	; 0x376 <main+0x260>
								if(stop_flag%2==0)break;
							};
							delay_flag=0;
 38e:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <delay_flag+0x1>
 392:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <delay_flag>
 396:	eb ce       	rjmp	.-554    	; 0x16e <main+0x58>

00000398 <_exit>:
 398:	f8 94       	cli

0000039a <__stop_program>:
 39a:	ff cf       	rjmp	.-2      	; 0x39a <__stop_program>
